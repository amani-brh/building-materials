// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using building_materials.Data;

#nullable disable

namespace building_materials.Migrations
{
    [DbContext(typeof(BuildingMaterialsContext))]
    partial class BuildingMaterialsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("building_materials.Models.CaracteristiqueEnvironnementale", b =>
                {
                    b.Property<int>("IdCaract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCaract"));

                    b.Property<double>("ConsommationEau")
                        .HasColumnType("float");

                    b.Property<double>("EmissionCO2")
                        .HasColumnType("float");

                    b.Property<int>("IdMateriau")
                        .HasColumnType("int");

                    b.Property<double>("PollutionAir")
                        .HasColumnType("float");

                    b.Property<double>("PollutionEau")
                        .HasColumnType("float");

                    b.Property<string>("UniteFonctionnelle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("UtilisationNetteEauDouce")
                        .HasColumnType("float");

                    b.HasKey("IdCaract");

                    b.HasIndex("IdMateriau");

                    b.ToTable("CaracteristiqueEnvironnementales");
                });

            modelBuilder.Entity("building_materials.Models.FacteurTransport", b =>
                {
                    b.Property<int>("IdMoyenTransport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoyenTransport"));

                    b.Property<double>("FacteurCO2")
                        .HasColumnType("float");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMoyenTransport");

                    b.ToTable("FacteurTransports");
                });

            modelBuilder.Entity("building_materials.Models.Famille", b =>
                {
                    b.Property<int>("IdFamille")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFamille"));

                    b.Property<int>("IdType")
                        .HasColumnType("int");

                    b.Property<string>("NomFamille")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdFamille");

                    b.HasIndex("IdType");

                    b.ToTable("Familles");
                });

            modelBuilder.Entity("building_materials.Models.MaterialType", b =>
                {
                    b.Property<int>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdType"));

                    b.Property<string>("NomType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdType");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("building_materials.Models.Materiau", b =>
                {
                    b.Property<int>("IdMateriau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateriau"));

                    b.Property<int>("IdFamille")
                        .HasColumnType("int");

                    b.Property<int>("IdProducteur")
                        .HasColumnType("int");

                    b.Property<int>("IdProvenance")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Origine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMateriau");

                    b.HasIndex("IdFamille");

                    b.HasIndex("IdProducteur");

                    b.HasIndex("IdProvenance");

                    b.ToTable("Materiaux");
                });

            modelBuilder.Entity("building_materials.Models.Producteur", b =>
                {
                    b.Property<int>("IdProducteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducteur"));

                    b.Property<string>("LieuProduction")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProducteur");

                    b.ToTable("Producteurs");
                });

            modelBuilder.Entity("building_materials.Models.Provenance", b =>
                {
                    b.Property<int>("IdProvenance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvenance"));

                    b.Property<int>("DistanceKm")
                        .HasColumnType("int");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProvenance");

                    b.ToTable("Provenances");
                });

            modelBuilder.Entity("building_materials.Models.Transport", b =>
                {
                    b.Property<int>("IdTransport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransport"));

                    b.Property<int>("DistanceKm")
                        .HasColumnType("int");

                    b.Property<double>("EmissionCO2")
                        .HasColumnType("float");

                    b.Property<int>("IdMateriau")
                        .HasColumnType("int");

                    b.Property<int>("IdMoyenTransport")
                        .HasColumnType("int");

                    b.HasKey("IdTransport");

                    b.HasIndex("IdMateriau");

                    b.HasIndex("IdMoyenTransport");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("building_materials.Models.CaracteristiqueEnvironnementale", b =>
                {
                    b.HasOne("building_materials.Models.Materiau", "Materiau")
                        .WithMany("CaracteristiqueEnvironnementales")
                        .HasForeignKey("IdMateriau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materiau");
                });

            modelBuilder.Entity("building_materials.Models.Famille", b =>
                {
                    b.HasOne("building_materials.Models.MaterialType", "Type")
                        .WithMany()
                        .HasForeignKey("IdType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("building_materials.Models.Materiau", b =>
                {
                    b.HasOne("building_materials.Models.Famille", "Famille")
                        .WithMany()
                        .HasForeignKey("IdFamille")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("building_materials.Models.Producteur", "Producteur")
                        .WithMany()
                        .HasForeignKey("IdProducteur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("building_materials.Models.Provenance", "Provenance")
                        .WithMany()
                        .HasForeignKey("IdProvenance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Famille");

                    b.Navigation("Producteur");

                    b.Navigation("Provenance");
                });

            modelBuilder.Entity("building_materials.Models.Transport", b =>
                {
                    b.HasOne("building_materials.Models.Materiau", "Materiau")
                        .WithMany("Transports")
                        .HasForeignKey("IdMateriau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("building_materials.Models.FacteurTransport", "MoyenTransport")
                        .WithMany()
                        .HasForeignKey("IdMoyenTransport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materiau");

                    b.Navigation("MoyenTransport");
                });

            modelBuilder.Entity("building_materials.Models.Materiau", b =>
                {
                    b.Navigation("CaracteristiqueEnvironnementales");

                    b.Navigation("Transports");
                });
#pragma warning restore 612, 618
        }
    }
}
